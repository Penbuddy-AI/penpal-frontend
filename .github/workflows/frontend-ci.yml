name: Frontend CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    release:
        types: [published]
    workflow_dispatch:

env:
    SERVICE_NAME: "frontend"
    IMAGE_NAME: "ghcr.io/${{ github.repository }}"

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'
                cache: 'npm'
                cache-dependency-path: 'package-lock.json'
            
            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm run lint
            
            - name: Run tests
              run: npm run test
            
            - name: Run end-to-end tests (headless)
              run: npm run test:e2e:headless
            
            - name: Upload test coverage
              if: success()
              uses: codecov/codecov-action@v3
              with:
                directory: .
                flags: ${{ env.SERVICE_NAME }}
    
    security-scan:
        runs-on: ubuntu-latest
        needs: build-and-test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            
            - name: Run npm audit
              run: npm audit --audit-level=high

            - name: Run Snyk to check for vulnerabilities
              uses: snyk/actions/node@master
              with:
                args: "--file=package-lock.json"
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
              
    build-and-push-image:
        runs-on: ubuntu-latest
        needs: [build-and-test, security-scan]
        if: github.event_name != 'pull_request'

        permissions:
            contents: read
            packages: write
        
        outputs:
            image_tag: ${{ steps.meta.outputs.tags }}
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Extract metadata for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.IMAGE_NAME }}
                tags: |
                    type=ref,event=branch
                    type=sha,format=short
                    type=semver,pattern={{version}},event=release
            
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                context: .
                file: Dockerfile
                platforms: linux/amd64
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max
            
            - name: Scan image for vulnerabilities
              uses: aquasecurity/trivy-action@master
              with:
                image-ref: ${{ steps.meta.outputs.tags }}
                format: 'sarif'
                output: 'trivy-results.sarif'
            
            - name: Upload Trivy scan results
              uses: github/codeql-action/upload-sarif@v2
              with:
                sarif_file: trivy-results.sarif
      
    deploy-to-staging:
        runs-on: ubuntu-latest
        needs: [build-and-push-image]
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        environment:
          name: 'Staging'
        
        steps:
          - name: Checkout infrastructure code
            uses: actions/checkout@v4
            with:
              repository: ${{ vars.INFRASTRUCTURE_REPO }}
              token: ${{ secrets.INFRASTRUCTURE_TOKEN }}

          - name: Update staging manifest
            run: |
              sed -i "s|image: ghcr.io/.*/frontend:.*|image: ${{ needs.build-and-push-image.outputs.image_tag }}|g" environments/staging/apps/frontend/deployment.yaml

          - name: Commit and push changes
            run: |
              git config --global user.name "GitHub Actions"
              git config --global user.email "actions@github.com"
              git add environments/staging/apps/frontend/deployment.yaml
              git commit -m "Update frontend image to ${{ needs.build-and-push-image.outputs.image_tag }}"
              git push
